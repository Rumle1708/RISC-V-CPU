;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Processor : 
  module ProgramCounter : 
    input clock : Clock
    input reset : Reset
    output io : {flip pCSel : UInt<1>, flip haltPC : UInt<1>, flip aLUIn : UInt<32>, pCOut : UInt<32>, pCPlus4 : UInt<32>}
    
    reg counter : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[ProgramCounter.scala 11:24]
    node _T = eq(io.haltPC, UInt<1>("h00")) @[ProgramCounter.scala 13:8]
    when _T : @[ProgramCounter.scala 13:19]
      node _T_1 = eq(io.pCSel, UInt<1>("h00")) @[ProgramCounter.scala 14:10]
      when _T_1 : @[ProgramCounter.scala 14:20]
        node _T_2 = add(counter, UInt<3>("h04")) @[ProgramCounter.scala 15:26]
        node _T_3 = tail(_T_2, 1) @[ProgramCounter.scala 15:26]
        counter <= _T_3 @[ProgramCounter.scala 15:15]
        skip @[ProgramCounter.scala 14:20]
      else : @[ProgramCounter.scala 16:17]
        counter <= io.aLUIn @[ProgramCounter.scala 17:15]
        skip @[ProgramCounter.scala 16:17]
      skip @[ProgramCounter.scala 13:19]
    io.pCOut <= counter @[ProgramCounter.scala 20:12]
    node _T_4 = add(counter, UInt<3>("h04")) @[ProgramCounter.scala 21:25]
    node _T_5 = tail(_T_4, 1) @[ProgramCounter.scala 21:25]
    io.pCPlus4 <= _T_5 @[ProgramCounter.scala 21:14]
    
  module InstructionMemory : 
    input clock : Clock
    input reset : Reset
    output io : {flip address : UInt<32>, instOut : UInt<32>}
    
    cmem instMem : UInt<32>[4096] @[InstructionMemory.scala 9:20]
    node _T = bits(io.address, 11, 0) @[InstructionMemory.scala 10:29]
    read mport MPORT = instMem[_T], clock @[InstructionMemory.scala 10:29]
    io.instOut <= MPORT @[InstructionMemory.scala 10:14]
    
  module InstructionDecoder : 
    input clock : Clock
    input reset : Reset
    output io : {flip inst : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, imm : UInt<25>, ctrl : UInt<9>}
    
    node _T = bits(io.inst, 11, 7) @[InstructionDecoder.scala 12:19]
    io.rd <= _T @[InstructionDecoder.scala 12:9]
    node _T_1 = bits(io.inst, 19, 15) @[InstructionDecoder.scala 13:20]
    io.rs1 <= _T_1 @[InstructionDecoder.scala 13:10]
    node _T_2 = bits(io.inst, 24, 20) @[InstructionDecoder.scala 14:20]
    io.rs2 <= _T_2 @[InstructionDecoder.scala 14:10]
    node _T_3 = bits(io.inst, 31, 7) @[InstructionDecoder.scala 15:20]
    io.imm <= _T_3 @[InstructionDecoder.scala 15:10]
    node hi_hi = bits(io.inst, 30, 30) @[InstructionDecoder.scala 16:25]
    node hi_lo = bits(io.inst, 14, 12) @[InstructionDecoder.scala 16:38]
    node lo = bits(io.inst, 6, 2) @[InstructionDecoder.scala 16:54]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    io.ctrl <= _T_4 @[InstructionDecoder.scala 16:11]
    
  module RegisterBank : 
    input clock : Clock
    input reset : Reset
    output io : {dataA : UInt<32>, dataB : UInt<32>, a7 : UInt<32>, flip rd : UInt<5>, flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip dataIn : UInt<32>, flip regWrite : UInt<1>, flip eCall : UInt<1>, flip call : UInt<4>}
    
    reg x : UInt<32>[32], clock @[RegisterBank.scala 13:14]
    x[0] <= UInt<32>("h00") @[RegisterBank.scala 15:8]
    io.dataA <= x[io.rs1] @[RegisterBank.scala 18:12]
    io.dataB <= x[io.rs2] @[RegisterBank.scala 19:12]
    io.a7 <= x[UInt<5>("h011")] @[RegisterBank.scala 22:9]
    node _T = neq(io.rd, UInt<1>("h00")) @[RegisterBank.scala 24:29]
    node _T_1 = and(io.regWrite, _T) @[RegisterBank.scala 24:20]
    when _T_1 : @[RegisterBank.scala 24:37]
      x[io.rd] <= io.dataIn @[RegisterBank.scala 26:14]
      skip @[RegisterBank.scala 24:37]
    when io.eCall : @[RegisterBank.scala 30:18]
      node _T_2 = eq(UInt<1>("h00"), io.call) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 40:58]
        node _T_3 = asSInt(x[10]) @[RegisterBank.scala 33:34]
        node _T_4 = asUInt(reset) @[RegisterBank.scala 33:15]
        node _T_5 = eq(_T_4, UInt<1>("h00")) @[RegisterBank.scala 33:15]
        when _T_5 : @[RegisterBank.scala 33:15]
          printf(clock, UInt<1>(1), "%d", _T_3) @[RegisterBank.scala 33:15]
          skip @[RegisterBank.scala 33:15]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_6 = eq(UInt<1>("h01"), io.call) @[Conditional.scala 37:30]
        when _T_6 : @[Conditional.scala 39:67]
          node _T_7 = asUInt(reset) @[RegisterBank.scala 36:15]
          node _T_8 = eq(_T_7, UInt<1>("h00")) @[RegisterBank.scala 36:15]
          when _T_8 : @[RegisterBank.scala 36:15]
            printf(clock, UInt<1>(1), "%d.00", x[10]) @[RegisterBank.scala 36:15]
            skip @[RegisterBank.scala 36:15]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_9 = eq(UInt<2>("h02"), io.call) @[Conditional.scala 37:30]
          when _T_9 : @[Conditional.scala 39:67]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_10 = eq(UInt<2>("h03"), io.call) @[Conditional.scala 37:30]
            when _T_10 : @[Conditional.scala 39:67]
              node _T_11 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_12 = eq(_T_11, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_12 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(0)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_13 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_14 = eq(_T_13, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_14 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[0]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_15 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_16 = eq(_T_15, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_16 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(8)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_17 = asUInt(reset) @[RegisterBank.scala 46:21]
              node _T_18 = eq(_T_17, UInt<1>("h00")) @[RegisterBank.scala 46:21]
              when _T_18 : @[RegisterBank.scala 46:21]
                printf(clock, UInt<1>(1), " ") @[RegisterBank.scala 46:21]
                skip @[RegisterBank.scala 46:21]
              node _T_19 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_20 = eq(_T_19, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_20 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[8]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_21 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_22 = eq(_T_21, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_22 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(16)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_23 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_24 = eq(_T_23, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_24 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[16]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_25 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_26 = eq(_T_25, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_26 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(24)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_27 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_28 = eq(_T_27, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_28 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[24]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_29 = asUInt(reset) @[RegisterBank.scala 50:17]
              node _T_30 = eq(_T_29, UInt<1>("h00")) @[RegisterBank.scala 50:17]
              when _T_30 : @[RegisterBank.scala 50:17]
                printf(clock, UInt<1>(1), "\n") @[RegisterBank.scala 50:17]
                skip @[RegisterBank.scala 50:17]
              node _T_31 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_32 = eq(_T_31, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_32 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(1)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_33 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_34 = eq(_T_33, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_34 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[1]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_35 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_36 = eq(_T_35, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_36 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(9)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_37 = asUInt(reset) @[RegisterBank.scala 46:21]
              node _T_38 = eq(_T_37, UInt<1>("h00")) @[RegisterBank.scala 46:21]
              when _T_38 : @[RegisterBank.scala 46:21]
                printf(clock, UInt<1>(1), " ") @[RegisterBank.scala 46:21]
                skip @[RegisterBank.scala 46:21]
              node _T_39 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_40 = eq(_T_39, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_40 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[9]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_41 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_42 = eq(_T_41, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_42 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(17)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_43 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_44 = eq(_T_43, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_44 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[17]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_45 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_46 = eq(_T_45, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_46 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(25)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_47 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_48 = eq(_T_47, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_48 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[25]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_49 = asUInt(reset) @[RegisterBank.scala 50:17]
              node _T_50 = eq(_T_49, UInt<1>("h00")) @[RegisterBank.scala 50:17]
              when _T_50 : @[RegisterBank.scala 50:17]
                printf(clock, UInt<1>(1), "\n") @[RegisterBank.scala 50:17]
                skip @[RegisterBank.scala 50:17]
              node _T_51 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_52 = eq(_T_51, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_52 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(2)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_53 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_54 = eq(_T_53, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_54 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[2]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_55 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_56 = eq(_T_55, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_56 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(10)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_57 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_58 = eq(_T_57, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_58 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[10]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_59 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_60 = eq(_T_59, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_60 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(18)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_61 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_62 = eq(_T_61, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_62 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[18]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_63 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_64 = eq(_T_63, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_64 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(26)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_65 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_66 = eq(_T_65, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_66 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[26]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_67 = asUInt(reset) @[RegisterBank.scala 50:17]
              node _T_68 = eq(_T_67, UInt<1>("h00")) @[RegisterBank.scala 50:17]
              when _T_68 : @[RegisterBank.scala 50:17]
                printf(clock, UInt<1>(1), "\n") @[RegisterBank.scala 50:17]
                skip @[RegisterBank.scala 50:17]
              node _T_69 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_70 = eq(_T_69, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_70 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(3)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_71 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_72 = eq(_T_71, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_72 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[3]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_73 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_74 = eq(_T_73, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_74 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(11)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_75 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_76 = eq(_T_75, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_76 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[11]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_77 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_78 = eq(_T_77, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_78 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(19)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_79 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_80 = eq(_T_79, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_80 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[19]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_81 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_82 = eq(_T_81, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_82 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(27)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_83 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_84 = eq(_T_83, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_84 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[27]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_85 = asUInt(reset) @[RegisterBank.scala 50:17]
              node _T_86 = eq(_T_85, UInt<1>("h00")) @[RegisterBank.scala 50:17]
              when _T_86 : @[RegisterBank.scala 50:17]
                printf(clock, UInt<1>(1), "\n") @[RegisterBank.scala 50:17]
                skip @[RegisterBank.scala 50:17]
              node _T_87 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_88 = eq(_T_87, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_88 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(4)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_89 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_90 = eq(_T_89, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_90 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[4]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_91 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_92 = eq(_T_91, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_92 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(12)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_93 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_94 = eq(_T_93, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_94 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[12]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_95 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_96 = eq(_T_95, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_96 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(20)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_97 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_98 = eq(_T_97, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_98 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[20]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_99 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_100 = eq(_T_99, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_100 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(28)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_101 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_102 = eq(_T_101, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_102 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[28]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_103 = asUInt(reset) @[RegisterBank.scala 50:17]
              node _T_104 = eq(_T_103, UInt<1>("h00")) @[RegisterBank.scala 50:17]
              when _T_104 : @[RegisterBank.scala 50:17]
                printf(clock, UInt<1>(1), "\n") @[RegisterBank.scala 50:17]
                skip @[RegisterBank.scala 50:17]
              node _T_105 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_106 = eq(_T_105, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_106 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(5)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_107 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_108 = eq(_T_107, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_108 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[5]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_109 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_110 = eq(_T_109, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_110 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(13)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_111 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_112 = eq(_T_111, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_112 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[13]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_113 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_114 = eq(_T_113, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_114 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(21)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_115 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_116 = eq(_T_115, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_116 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[21]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_117 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_118 = eq(_T_117, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_118 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(29)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_119 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_120 = eq(_T_119, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_120 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[29]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_121 = asUInt(reset) @[RegisterBank.scala 50:17]
              node _T_122 = eq(_T_121, UInt<1>("h00")) @[RegisterBank.scala 50:17]
              when _T_122 : @[RegisterBank.scala 50:17]
                printf(clock, UInt<1>(1), "\n") @[RegisterBank.scala 50:17]
                skip @[RegisterBank.scala 50:17]
              node _T_123 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_124 = eq(_T_123, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_124 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(6)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_125 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_126 = eq(_T_125, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_126 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[6]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_127 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_128 = eq(_T_127, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_128 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(14)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_129 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_130 = eq(_T_129, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_130 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[14]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_131 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_132 = eq(_T_131, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_132 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(22)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_133 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_134 = eq(_T_133, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_134 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[22]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_135 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_136 = eq(_T_135, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_136 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(30)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_137 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_138 = eq(_T_137, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_138 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[30]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_139 = asUInt(reset) @[RegisterBank.scala 50:17]
              node _T_140 = eq(_T_139, UInt<1>("h00")) @[RegisterBank.scala 50:17]
              when _T_140 : @[RegisterBank.scala 50:17]
                printf(clock, UInt<1>(1), "\n") @[RegisterBank.scala 50:17]
                skip @[RegisterBank.scala 50:17]
              node _T_141 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_142 = eq(_T_141, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_142 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(7)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_143 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_144 = eq(_T_143, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_144 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[7]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_145 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_146 = eq(_T_145, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_146 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(15)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_147 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_148 = eq(_T_147, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_148 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[15]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_149 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_150 = eq(_T_149, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_150 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(23)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_151 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_152 = eq(_T_151, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_152 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[23]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_153 = asUInt(reset) @[RegisterBank.scala 44:19]
              node _T_154 = eq(_T_153, UInt<1>("h00")) @[RegisterBank.scala 44:19]
              when _T_154 : @[RegisterBank.scala 44:19]
                printf(clock, UInt<1>(1), "x(31)") @[RegisterBank.scala 44:19]
                skip @[RegisterBank.scala 44:19]
              node _T_155 = asUInt(reset) @[RegisterBank.scala 48:19]
              node _T_156 = eq(_T_155, UInt<1>("h00")) @[RegisterBank.scala 48:19]
              when _T_156 : @[RegisterBank.scala 48:19]
                printf(clock, UInt<1>(1), " = 0x%x\t", x[31]) @[RegisterBank.scala 48:19]
                skip @[RegisterBank.scala 48:19]
              node _T_157 = asUInt(reset) @[RegisterBank.scala 50:17]
              node _T_158 = eq(_T_157, UInt<1>("h00")) @[RegisterBank.scala 50:17]
              when _T_158 : @[RegisterBank.scala 50:17]
                printf(clock, UInt<1>(1), "\n") @[RegisterBank.scala 50:17]
                skip @[RegisterBank.scala 50:17]
              node _T_159 = asUInt(reset) @[RegisterBank.scala 52:15]
              node _T_160 = eq(_T_159, UInt<1>("h00")) @[RegisterBank.scala 52:15]
              when _T_160 : @[RegisterBank.scala 52:15]
                printf(clock, UInt<1>(1), "\n\n") @[RegisterBank.scala 52:15]
                skip @[RegisterBank.scala 52:15]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_161 = eq(UInt<3>("h04"), io.call) @[Conditional.scala 37:30]
              when _T_161 : @[Conditional.scala 39:67]
                node _T_162 = asUInt(reset) @[RegisterBank.scala 55:15]
                node _T_163 = eq(_T_162, UInt<1>("h00")) @[RegisterBank.scala 55:15]
                when _T_163 : @[RegisterBank.scala 55:15]
                  printf(clock, UInt<1>(1), "%c", x[10]) @[RegisterBank.scala 55:15]
                  skip @[RegisterBank.scala 55:15]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_164 = eq(UInt<3>("h05"), io.call) @[Conditional.scala 37:30]
                when _T_164 : @[Conditional.scala 39:67]
                  node _T_165 = asUInt(reset) @[RegisterBank.scala 58:15]
                  node _T_166 = eq(_T_165, UInt<1>("h00")) @[RegisterBank.scala 58:15]
                  when _T_166 : @[RegisterBank.scala 58:15]
                    printf(clock, UInt<1>(1), "%x", x[10]) @[RegisterBank.scala 58:15]
                    skip @[RegisterBank.scala 58:15]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_167 = eq(UInt<3>("h06"), io.call) @[Conditional.scala 37:30]
                  when _T_167 : @[Conditional.scala 39:67]
                    node _T_168 = asUInt(reset) @[RegisterBank.scala 61:15]
                    node _T_169 = eq(_T_168, UInt<1>("h00")) @[RegisterBank.scala 61:15]
                    when _T_169 : @[RegisterBank.scala 61:15]
                      printf(clock, UInt<1>(1), "%b", x[10]) @[RegisterBank.scala 61:15]
                      skip @[RegisterBank.scala 61:15]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_170 = eq(UInt<3>("h07"), io.call) @[Conditional.scala 37:30]
                    when _T_170 : @[Conditional.scala 39:67]
                      node _T_171 = asUInt(reset) @[RegisterBank.scala 64:15]
                      node _T_172 = eq(_T_171, UInt<1>("h00")) @[RegisterBank.scala 64:15]
                      when _T_172 : @[RegisterBank.scala 64:15]
                        printf(clock, UInt<1>(1), "%d", x[10]) @[RegisterBank.scala 64:15]
                        skip @[RegisterBank.scala 64:15]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_173 = eq(UInt<4>("h08"), io.call) @[Conditional.scala 37:30]
                      when _T_173 : @[Conditional.scala 39:67]
                        node _T_174 = asSInt(x[10]) @[RegisterBank.scala 67:47]
                        node _T_175 = asUInt(reset) @[RegisterBank.scala 67:15]
                        node _T_176 = eq(_T_175, UInt<1>("h00")) @[RegisterBank.scala 67:15]
                        when _T_176 : @[RegisterBank.scala 67:15]
                          printf(clock, UInt<1>(1), "Status code: %d", _T_174) @[RegisterBank.scala 67:15]
                          skip @[RegisterBank.scala 67:15]
                        skip @[Conditional.scala 39:67]
      skip @[RegisterBank.scala 30:18]
    
  module ControlLogic : 
    input clock : Clock
    input reset : Reset
    output io : {flip ctrl : UInt<9>, flip a7 : UInt<32>, flip brEq : UInt<1>, flip brLT : UInt<1>, pCSel : UInt<1>, regWEn : UInt<1>, brUn : UInt<1>, bSel : UInt<1>, aSel : UInt<1>, memRW : UInt<1>, memUn : UInt<1>, haltPC : UInt<1>, eCall : UInt<1>, aLUSel : UInt<4>, call : UInt<4>, immSel : UInt<3>, wBSel : UInt<2>, memWidth : UInt<2>}
    
    io.pCSel <= UInt<1>("h00") @[ControlLogic.scala 88:12]
    io.regWEn <= UInt<1>("h01") @[ControlLogic.scala 89:13]
    io.brUn <= UInt<1>("h00") @[ControlLogic.scala 90:11]
    io.bSel <= UInt<1>("h00") @[ControlLogic.scala 91:11]
    io.aSel <= UInt<1>("h00") @[ControlLogic.scala 92:11]
    io.memRW <= UInt<1>("h00") @[ControlLogic.scala 93:12]
    io.aLUSel <= UInt<4>("h00") @[ControlLogic.scala 94:13]
    io.immSel <= UInt<1>("h00") @[ControlLogic.scala 95:13]
    io.wBSel <= UInt<1>("h01") @[ControlLogic.scala 96:12]
    io.memUn <= UInt<1>("h00") @[ControlLogic.scala 97:12]
    io.memWidth <= UInt<2>("h02") @[ControlLogic.scala 98:15]
    wire _WIRE : UInt<1>
    _WIRE <= UInt<1>("h00")
    io.haltPC <= _WIRE @[ControlLogic.scala 99:13]
    io.eCall <= UInt<1>("h00") @[ControlLogic.scala 100:12]
    wire _WIRE_1 : UInt
    _WIRE_1 <= UInt<1>("h00")
    io.call <= _WIRE_1 @[ControlLogic.scala 101:11]
    node _T = bits(io.ctrl, 4, 0) @[ControlLogic.scala 104:17]
    node _T_1 = eq(UInt<4>("h0c"), _T) @[Conditional.scala 37:30]
    when _T_1 : @[Conditional.scala 40:58]
      node _T_2 = bits(io.ctrl, 7, 5) @[ControlLogic.scala 106:21]
      node _T_3 = eq(UInt<1>("h00"), _T_2) @[Conditional.scala 37:30]
      when _T_3 : @[Conditional.scala 40:58]
        node _T_4 = bits(io.ctrl, 8, 8) @[ControlLogic.scala 109:23]
        when _T_4 : @[ControlLogic.scala 109:27]
          io.aLUSel <= UInt<4>("h01") @[ControlLogic.scala 110:23]
          skip @[ControlLogic.scala 109:27]
        else : @[ControlLogic.scala 111:22]
          io.aLUSel <= UInt<4>("h00") @[ControlLogic.scala 112:23]
          skip @[ControlLogic.scala 111:22]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_5 = eq(UInt<1>("h01"), _T_2) @[Conditional.scala 37:30]
        when _T_5 : @[Conditional.scala 39:67]
          io.aLUSel <= UInt<4>("h06") @[ControlLogic.scala 117:21]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_6 = eq(UInt<2>("h02"), _T_2) @[Conditional.scala 37:30]
          when _T_6 : @[Conditional.scala 39:67]
            io.aLUSel <= UInt<4>("h05") @[ControlLogic.scala 121:21]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_7 = eq(UInt<2>("h03"), _T_2) @[Conditional.scala 37:30]
            when _T_7 : @[Conditional.scala 39:67]
              io.aLUSel <= UInt<4>("h07") @[ControlLogic.scala 125:21]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_8 = eq(UInt<3>("h04"), _T_2) @[Conditional.scala 37:30]
              when _T_8 : @[Conditional.scala 39:67]
                io.aLUSel <= UInt<4>("h04") @[ControlLogic.scala 129:21]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_9 = eq(UInt<3>("h05"), _T_2) @[Conditional.scala 37:30]
                when _T_9 : @[Conditional.scala 39:67]
                  node _T_10 = bits(io.ctrl, 8, 8) @[ControlLogic.scala 133:23]
                  when _T_10 : @[ControlLogic.scala 133:27]
                    io.aLUSel <= UInt<4>("h09") @[ControlLogic.scala 134:23]
                    skip @[ControlLogic.scala 133:27]
                  else : @[ControlLogic.scala 135:22]
                    io.aLUSel <= UInt<4>("h08") @[ControlLogic.scala 136:23]
                    skip @[ControlLogic.scala 135:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_11 = eq(UInt<3>("h06"), _T_2) @[Conditional.scala 37:30]
                  when _T_11 : @[Conditional.scala 39:67]
                    io.aLUSel <= UInt<4>("h03") @[ControlLogic.scala 141:21]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_12 = eq(UInt<3>("h07"), _T_2) @[Conditional.scala 37:30]
                    when _T_12 : @[Conditional.scala 39:67]
                      io.aLUSel <= UInt<4>("h02") @[ControlLogic.scala 145:21]
                      skip @[Conditional.scala 39:67]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_13 = eq(UInt<1>("h00"), _T) @[Conditional.scala 37:30]
      when _T_13 : @[Conditional.scala 39:67]
        io.wBSel <= UInt<1>("h00") @[ControlLogic.scala 150:16]
        io.bSel <= UInt<1>("h01") @[ControlLogic.scala 151:15]
        io.immSel <= UInt<1>("h01") @[ControlLogic.scala 152:17]
        node _T_14 = bits(io.ctrl, 7, 5) @[ControlLogic.scala 153:21]
        node _T_15 = eq(UInt<1>("h00"), _T_14) @[Conditional.scala 37:30]
        when _T_15 : @[Conditional.scala 40:58]
          io.memWidth <= UInt<1>("h00") @[ControlLogic.scala 155:23]
          skip @[Conditional.scala 40:58]
        else : @[Conditional.scala 39:67]
          node _T_16 = eq(UInt<1>("h01"), _T_14) @[Conditional.scala 37:30]
          when _T_16 : @[Conditional.scala 39:67]
            io.memWidth <= UInt<1>("h01") @[ControlLogic.scala 158:23]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_17 = eq(UInt<2>("h02"), _T_14) @[Conditional.scala 37:30]
            when _T_17 : @[Conditional.scala 39:67]
              io.memWidth <= UInt<2>("h02") @[ControlLogic.scala 161:23]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_18 = eq(UInt<3>("h04"), _T_14) @[Conditional.scala 37:30]
              when _T_18 : @[Conditional.scala 39:67]
                io.memWidth <= UInt<1>("h00") @[ControlLogic.scala 164:23]
                io.memUn <= UInt<1>("h01") @[ControlLogic.scala 165:20]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_19 = eq(UInt<3>("h05"), _T_14) @[Conditional.scala 37:30]
                when _T_19 : @[Conditional.scala 39:67]
                  io.memWidth <= UInt<1>("h01") @[ControlLogic.scala 168:23]
                  io.memUn <= UInt<1>("h01") @[ControlLogic.scala 169:20]
                  skip @[Conditional.scala 39:67]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_20 = eq(UInt<2>("h03"), _T) @[Conditional.scala 37:30]
        when _T_20 : @[Conditional.scala 39:67]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_21 = eq(UInt<3>("h04"), _T) @[Conditional.scala 37:30]
          when _T_21 : @[Conditional.scala 39:67]
            io.bSel <= UInt<1>("h01") @[ControlLogic.scala 177:15]
            io.immSel <= UInt<1>("h01") @[ControlLogic.scala 178:17]
            node _T_22 = bits(io.ctrl, 7, 5) @[ControlLogic.scala 179:21]
            node _T_23 = eq(UInt<1>("h00"), _T_22) @[Conditional.scala 37:30]
            when _T_23 : @[Conditional.scala 40:58]
              io.aLUSel <= UInt<4>("h00") @[ControlLogic.scala 182:21]
              skip @[Conditional.scala 40:58]
            else : @[Conditional.scala 39:67]
              node _T_24 = eq(UInt<2>("h02"), _T_22) @[Conditional.scala 37:30]
              when _T_24 : @[Conditional.scala 39:67]
                io.aLUSel <= UInt<4>("h05") @[ControlLogic.scala 186:21]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_25 = eq(UInt<2>("h03"), _T_22) @[Conditional.scala 37:30]
                when _T_25 : @[Conditional.scala 39:67]
                  io.aLUSel <= UInt<4>("h07") @[ControlLogic.scala 190:21]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_26 = eq(UInt<3>("h04"), _T_22) @[Conditional.scala 37:30]
                  when _T_26 : @[Conditional.scala 39:67]
                    io.aLUSel <= UInt<4>("h04") @[ControlLogic.scala 194:21]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_27 = eq(UInt<3>("h06"), _T_22) @[Conditional.scala 37:30]
                    when _T_27 : @[Conditional.scala 39:67]
                      io.aLUSel <= UInt<4>("h03") @[ControlLogic.scala 198:21]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_28 = eq(UInt<3>("h07"), _T_22) @[Conditional.scala 37:30]
                      when _T_28 : @[Conditional.scala 39:67]
                        io.aLUSel <= UInt<4>("h02") @[ControlLogic.scala 202:21]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_29 = eq(UInt<1>("h01"), _T_22) @[Conditional.scala 37:30]
                        when _T_29 : @[Conditional.scala 39:67]
                          io.aLUSel <= UInt<4>("h06") @[ControlLogic.scala 206:21]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_30 = eq(UInt<3>("h05"), _T_22) @[Conditional.scala 37:30]
                          when _T_30 : @[Conditional.scala 39:67]
                            node _T_31 = bits(io.ctrl, 8, 8) @[ControlLogic.scala 210:23]
                            when _T_31 : @[ControlLogic.scala 210:27]
                              io.aLUSel <= UInt<4>("h09") @[ControlLogic.scala 211:23]
                              skip @[ControlLogic.scala 210:27]
                            else : @[ControlLogic.scala 212:23]
                              io.aLUSel <= UInt<4>("h08") @[ControlLogic.scala 213:23]
                              skip @[ControlLogic.scala 212:23]
                            skip @[Conditional.scala 39:67]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_32 = eq(UInt<3>("h06"), _T) @[Conditional.scala 37:30]
            when _T_32 : @[Conditional.scala 39:67]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_33 = eq(UInt<5>("h019"), _T) @[Conditional.scala 37:30]
              when _T_33 : @[Conditional.scala 39:67]
                io.pCSel <= UInt<1>("h01") @[ControlLogic.scala 222:16]
                io.immSel <= UInt<1>("h01") @[ControlLogic.scala 223:17]
                io.bSel <= UInt<1>("h01") @[ControlLogic.scala 224:15]
                io.wBSel <= UInt<2>("h02") @[ControlLogic.scala 225:16]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_34 = eq(UInt<5>("h01c"), _T) @[Conditional.scala 37:30]
                when _T_34 : @[Conditional.scala 39:67]
                  io.eCall <= UInt<1>("h01") @[ControlLogic.scala 228:16]
                  node _T_35 = eq(UInt<1>("h01"), io.a7) @[Conditional.scala 37:30]
                  when _T_35 : @[Conditional.scala 40:58]
                    io.call <= UInt<1>("h00") @[ControlLogic.scala 231:19]
                    skip @[Conditional.scala 40:58]
                  else : @[Conditional.scala 39:67]
                    node _T_36 = eq(UInt<2>("h02"), io.a7) @[Conditional.scala 37:30]
                    when _T_36 : @[Conditional.scala 39:67]
                      io.call <= UInt<1>("h01") @[ControlLogic.scala 234:19]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_37 = eq(UInt<3>("h04"), io.a7) @[Conditional.scala 37:30]
                      when _T_37 : @[Conditional.scala 39:67]
                        io.call <= UInt<2>("h02") @[ControlLogic.scala 237:19]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_38 = eq(UInt<4>("h0a"), io.a7) @[Conditional.scala 37:30]
                        when _T_38 : @[Conditional.scala 39:67]
                          io.call <= UInt<2>("h03") @[ControlLogic.scala 240:19]
                          io.haltPC <= UInt<1>("h01") @[ControlLogic.scala 241:21]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_39 = eq(UInt<4>("h0b"), io.a7) @[Conditional.scala 37:30]
                          when _T_39 : @[Conditional.scala 39:67]
                            io.call <= UInt<3>("h04") @[ControlLogic.scala 244:19]
                            skip @[Conditional.scala 39:67]
                          else : @[Conditional.scala 39:67]
                            node _T_40 = eq(UInt<6>("h022"), io.a7) @[Conditional.scala 37:30]
                            when _T_40 : @[Conditional.scala 39:67]
                              io.call <= UInt<3>("h05") @[ControlLogic.scala 247:19]
                              skip @[Conditional.scala 39:67]
                            else : @[Conditional.scala 39:67]
                              node _T_41 = eq(UInt<6>("h023"), io.a7) @[Conditional.scala 37:30]
                              when _T_41 : @[Conditional.scala 39:67]
                                io.call <= UInt<3>("h06") @[ControlLogic.scala 250:19]
                                skip @[Conditional.scala 39:67]
                              else : @[Conditional.scala 39:67]
                                node _T_42 = eq(UInt<6>("h024"), io.a7) @[Conditional.scala 37:30]
                                when _T_42 : @[Conditional.scala 39:67]
                                  io.call <= UInt<3>("h07") @[ControlLogic.scala 253:19]
                                  skip @[Conditional.scala 39:67]
                                else : @[Conditional.scala 39:67]
                                  node _T_43 = eq(UInt<7>("h05d"), io.a7) @[Conditional.scala 37:30]
                                  when _T_43 : @[Conditional.scala 39:67]
                                    io.call <= UInt<4>("h08") @[ControlLogic.scala 256:19]
                                    io.haltPC <= UInt<1>("h01") @[ControlLogic.scala 257:21]
                                    skip @[Conditional.scala 39:67]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_44 = eq(UInt<4>("h08"), _T) @[Conditional.scala 37:30]
                  when _T_44 : @[Conditional.scala 39:67]
                    io.immSel <= UInt<2>("h02") @[ControlLogic.scala 262:17]
                    io.bSel <= UInt<1>("h01") @[ControlLogic.scala 263:15]
                    io.memRW <= UInt<1>("h01") @[ControlLogic.scala 264:16]
                    io.regWEn <= UInt<1>("h00") @[ControlLogic.scala 265:17]
                    node _T_45 = bits(io.ctrl, 7, 5) @[ControlLogic.scala 266:21]
                    node _T_46 = eq(UInt<1>("h00"), _T_45) @[Conditional.scala 37:30]
                    when _T_46 : @[Conditional.scala 40:58]
                      io.memWidth <= UInt<1>("h00") @[ControlLogic.scala 268:23]
                      skip @[Conditional.scala 40:58]
                    else : @[Conditional.scala 39:67]
                      node _T_47 = eq(UInt<1>("h01"), _T_45) @[Conditional.scala 37:30]
                      when _T_47 : @[Conditional.scala 39:67]
                        io.memWidth <= UInt<1>("h01") @[ControlLogic.scala 271:23]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_48 = eq(UInt<2>("h02"), _T_45) @[Conditional.scala 37:30]
                        when _T_48 : @[Conditional.scala 39:67]
                          io.memWidth <= UInt<2>("h02") @[ControlLogic.scala 274:23]
                          skip @[Conditional.scala 39:67]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_49 = eq(UInt<5>("h018"), _T) @[Conditional.scala 37:30]
                    when _T_49 : @[Conditional.scala 39:67]
                      node _T_50 = bits(io.ctrl, 7, 5) @[ControlLogic.scala 279:21]
                      node _T_51 = eq(UInt<1>("h00"), _T_50) @[Conditional.scala 37:30]
                      when _T_51 : @[Conditional.scala 40:58]
                        io.immSel <= UInt<3>("h05") @[ControlLogic.scala 281:21]
                        io.aSel <= UInt<1>("h01") @[ControlLogic.scala 282:19]
                        io.bSel <= UInt<1>("h01") @[ControlLogic.scala 283:19]
                        io.regWEn <= UInt<1>("h00") @[ControlLogic.scala 284:21]
                        when io.brEq : @[ControlLogic.scala 285:24]
                          io.pCSel <= UInt<1>("h01") @[ControlLogic.scala 286:22]
                          skip @[ControlLogic.scala 285:24]
                        skip @[Conditional.scala 40:58]
                      else : @[Conditional.scala 39:67]
                        node _T_52 = eq(UInt<1>("h01"), _T_50) @[Conditional.scala 37:30]
                        when _T_52 : @[Conditional.scala 39:67]
                          io.immSel <= UInt<3>("h05") @[ControlLogic.scala 290:21]
                          io.aSel <= UInt<1>("h01") @[ControlLogic.scala 291:19]
                          io.bSel <= UInt<1>("h01") @[ControlLogic.scala 292:19]
                          io.regWEn <= UInt<1>("h00") @[ControlLogic.scala 293:21]
                          node _T_53 = eq(io.brEq, UInt<1>("h00")) @[ControlLogic.scala 294:16]
                          when _T_53 : @[ControlLogic.scala 294:25]
                            io.pCSel <= UInt<1>("h01") @[ControlLogic.scala 295:22]
                            skip @[ControlLogic.scala 294:25]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_54 = eq(UInt<3>("h04"), _T_50) @[Conditional.scala 37:30]
                          when _T_54 : @[Conditional.scala 39:67]
                            io.immSel <= UInt<3>("h05") @[ControlLogic.scala 299:21]
                            io.aSel <= UInt<1>("h01") @[ControlLogic.scala 300:19]
                            io.bSel <= UInt<1>("h01") @[ControlLogic.scala 301:19]
                            io.regWEn <= UInt<1>("h00") @[ControlLogic.scala 302:21]
                            when io.brLT : @[ControlLogic.scala 303:24]
                              io.pCSel <= UInt<1>("h01") @[ControlLogic.scala 304:22]
                              skip @[ControlLogic.scala 303:24]
                            skip @[Conditional.scala 39:67]
                          else : @[Conditional.scala 39:67]
                            node _T_55 = eq(UInt<3>("h05"), _T_50) @[Conditional.scala 37:30]
                            when _T_55 : @[Conditional.scala 39:67]
                              io.immSel <= UInt<3>("h05") @[ControlLogic.scala 308:21]
                              io.aSel <= UInt<1>("h01") @[ControlLogic.scala 309:19]
                              io.bSel <= UInt<1>("h01") @[ControlLogic.scala 310:19]
                              io.regWEn <= UInt<1>("h00") @[ControlLogic.scala 311:21]
                              node _T_56 = eq(io.brLT, UInt<1>("h00")) @[ControlLogic.scala 312:27]
                              node _T_57 = or(io.brEq, _T_56) @[ControlLogic.scala 312:24]
                              when _T_57 : @[ControlLogic.scala 312:36]
                                io.pCSel <= UInt<1>("h01") @[ControlLogic.scala 313:22]
                                skip @[ControlLogic.scala 312:36]
                              skip @[Conditional.scala 39:67]
                            else : @[Conditional.scala 39:67]
                              node _T_58 = eq(UInt<3>("h06"), _T_50) @[Conditional.scala 37:30]
                              when _T_58 : @[Conditional.scala 39:67]
                                io.immSel <= UInt<3>("h05") @[ControlLogic.scala 317:21]
                                io.aSel <= UInt<1>("h01") @[ControlLogic.scala 318:19]
                                io.bSel <= UInt<1>("h01") @[ControlLogic.scala 319:19]
                                io.brUn <= UInt<1>("h01") @[ControlLogic.scala 320:19]
                                io.regWEn <= UInt<1>("h00") @[ControlLogic.scala 321:21]
                                when io.brLT : @[ControlLogic.scala 322:24]
                                  io.pCSel <= UInt<1>("h01") @[ControlLogic.scala 323:22]
                                  skip @[ControlLogic.scala 322:24]
                                skip @[Conditional.scala 39:67]
                              else : @[Conditional.scala 39:67]
                                node _T_59 = eq(UInt<3>("h07"), _T_50) @[Conditional.scala 37:30]
                                when _T_59 : @[Conditional.scala 39:67]
                                  io.immSel <= UInt<3>("h05") @[ControlLogic.scala 327:21]
                                  io.aSel <= UInt<1>("h01") @[ControlLogic.scala 328:19]
                                  io.bSel <= UInt<1>("h01") @[ControlLogic.scala 329:19]
                                  io.brUn <= UInt<1>("h01") @[ControlLogic.scala 330:19]
                                  io.regWEn <= UInt<1>("h00") @[ControlLogic.scala 331:21]
                                  node _T_60 = eq(io.brLT, UInt<1>("h00")) @[ControlLogic.scala 332:27]
                                  node _T_61 = or(io.brEq, _T_60) @[ControlLogic.scala 332:24]
                                  when _T_61 : @[ControlLogic.scala 332:36]
                                    io.pCSel <= UInt<1>("h01") @[ControlLogic.scala 333:22]
                                    skip @[ControlLogic.scala 332:36]
                                  skip @[Conditional.scala 39:67]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_62 = eq(UInt<4>("h0d"), _T) @[Conditional.scala 37:30]
                      when _T_62 : @[Conditional.scala 39:67]
                        io.immSel <= UInt<2>("h03") @[ControlLogic.scala 339:17]
                        io.bSel <= UInt<1>("h01") @[ControlLogic.scala 340:15]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_63 = eq(UInt<3>("h05"), _T) @[Conditional.scala 37:30]
                        when _T_63 : @[Conditional.scala 39:67]
                          io.immSel <= UInt<2>("h03") @[ControlLogic.scala 343:17]
                          io.aSel <= UInt<1>("h01") @[ControlLogic.scala 344:15]
                          io.bSel <= UInt<1>("h01") @[ControlLogic.scala 345:15]
                          skip @[Conditional.scala 39:67]
                        else : @[Conditional.scala 39:67]
                          node _T_64 = eq(UInt<5>("h01b"), _T) @[Conditional.scala 37:30]
                          when _T_64 : @[Conditional.scala 39:67]
                            io.immSel <= UInt<3>("h04") @[ControlLogic.scala 348:17]
                            io.pCSel <= UInt<1>("h01") @[ControlLogic.scala 349:16]
                            io.aSel <= UInt<1>("h01") @[ControlLogic.scala 350:15]
                            io.bSel <= UInt<1>("h01") @[ControlLogic.scala 351:15]
                            io.wBSel <= UInt<2>("h02") @[ControlLogic.scala 352:16]
                            skip @[Conditional.scala 39:67]
    
  module ALU : 
    input clock : Clock
    input reset : Reset
    output io : {flip aLUSel : UInt<4>, flip aSel : UInt<1>, flip bSel : UInt<1>, flip dataA : UInt<32>, flip dataB : UInt<32>, flip pCIn : UInt<32>, flip immIn : UInt<32>, result : UInt<32>}
    
    wire _WIRE : UInt
    _WIRE <= UInt<1>("h00")
    io.result <= _WIRE @[ALU.scala 28:13]
    node operandA = mux(io.aSel, io.pCIn, io.dataA) @[ALU.scala 31:21]
    node operandB = mux(io.bSel, io.immIn, io.dataB) @[ALU.scala 32:21]
    node shamt = bits(operandB, 4, 0) @[ALU.scala 33:23]
    node _T = eq(UInt<4>("h00"), io.aLUSel) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = asSInt(operandA) @[ALU.scala 37:36]
      node _T_2 = asSInt(operandB) @[ALU.scala 37:56]
      node _T_3 = add(_T_1, _T_2) @[ALU.scala 37:39]
      node _T_4 = tail(_T_3, 1) @[ALU.scala 37:39]
      node _T_5 = asSInt(_T_4) @[ALU.scala 37:39]
      node _T_6 = asUInt(_T_5) @[ALU.scala 37:66]
      io.result <= _T_6 @[ALU.scala 37:17]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_7 = eq(UInt<4>("h01"), io.aLUSel) @[Conditional.scala 37:30]
      when _T_7 : @[Conditional.scala 39:67]
        node _T_8 = asSInt(operandA) @[ALU.scala 40:36]
        node _T_9 = asSInt(operandB) @[ALU.scala 40:56]
        node _T_10 = sub(_T_8, _T_9) @[ALU.scala 40:39]
        node _T_11 = tail(_T_10, 1) @[ALU.scala 40:39]
        node _T_12 = asSInt(_T_11) @[ALU.scala 40:39]
        node _T_13 = asUInt(_T_12) @[ALU.scala 40:66]
        io.result <= _T_13 @[ALU.scala 40:17]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_14 = eq(UInt<4>("h02"), io.aLUSel) @[Conditional.scala 37:30]
        when _T_14 : @[Conditional.scala 39:67]
          node _T_15 = and(operandA, operandB) @[ALU.scala 43:29]
          io.result <= _T_15 @[ALU.scala 43:17]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_16 = eq(UInt<4>("h03"), io.aLUSel) @[Conditional.scala 37:30]
          when _T_16 : @[Conditional.scala 39:67]
            node _T_17 = or(operandA, operandB) @[ALU.scala 46:29]
            io.result <= _T_17 @[ALU.scala 46:17]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_18 = eq(UInt<4>("h04"), io.aLUSel) @[Conditional.scala 37:30]
            when _T_18 : @[Conditional.scala 39:67]
              node _T_19 = xor(operandA, operandB) @[ALU.scala 49:29]
              io.result <= _T_19 @[ALU.scala 49:17]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_20 = eq(UInt<4>("h05"), io.aLUSel) @[Conditional.scala 37:30]
              when _T_20 : @[Conditional.scala 39:67]
                node _T_21 = asSInt(operandA) @[ALU.scala 52:27]
                node _T_22 = asSInt(operandB) @[ALU.scala 52:47]
                node _T_23 = lt(_T_21, _T_22) @[ALU.scala 52:30]
                when _T_23 : @[ALU.scala 52:50]
                  io.result <= UInt<1>("h01") @[ALU.scala 53:19]
                  skip @[ALU.scala 52:50]
                else : @[ALU.scala 54:19]
                  io.result <= UInt<1>("h00") @[ALU.scala 55:19]
                  skip @[ALU.scala 54:19]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_24 = eq(UInt<4>("h06"), io.aLUSel) @[Conditional.scala 37:30]
                when _T_24 : @[Conditional.scala 39:67]
                  node _T_25 = dshl(operandA, shamt) @[ALU.scala 59:29]
                  io.result <= _T_25 @[ALU.scala 59:17]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_26 = eq(UInt<4>("h07"), io.aLUSel) @[Conditional.scala 37:30]
                  when _T_26 : @[Conditional.scala 39:67]
                    node _T_27 = lt(operandA, operandB) @[ALU.scala 62:21]
                    when _T_27 : @[ALU.scala 62:32]
                      io.result <= UInt<1>("h01") @[ALU.scala 63:19]
                      skip @[ALU.scala 62:32]
                    else : @[ALU.scala 64:19]
                      io.result <= UInt<1>("h00") @[ALU.scala 65:19]
                      skip @[ALU.scala 64:19]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_28 = eq(UInt<4>("h08"), io.aLUSel) @[Conditional.scala 37:30]
                    when _T_28 : @[Conditional.scala 39:67]
                      node _T_29 = dshr(operandA, shamt) @[ALU.scala 69:29]
                      io.result <= _T_29 @[ALU.scala 69:17]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_30 = eq(UInt<4>("h09"), io.aLUSel) @[Conditional.scala 37:30]
                      when _T_30 : @[Conditional.scala 39:67]
                        node _T_31 = asSInt(operandA) @[ALU.scala 72:36]
                        node _T_32 = dshr(_T_31, operandB) @[ALU.scala 72:39]
                        node _T_33 = asUInt(_T_32) @[ALU.scala 72:58]
                        io.result <= _T_33 @[ALU.scala 72:17]
                        skip @[Conditional.scala 39:67]
    
  module ImmediateGenerator : 
    input clock : Clock
    input reset : Reset
    output io : {flip immIn : UInt<25>, flip immSel : UInt<3>, immOut : UInt<32>}
    
    wire _WIRE : UInt
    _WIRE <= UInt<1>("h00")
    io.immOut <= _WIRE @[ImmediateGenerator.scala 22:13]
    node _T = eq(UInt<1>("h00"), io.immSel) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      io.immOut <= UInt<1>("h00") @[ImmediateGenerator.scala 27:17]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<1>("h01"), io.immSel) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        node _T_2 = bits(io.immIn, 24, 24) @[ImmediateGenerator.scala 30:40]
        node _T_3 = bits(_T_2, 0, 0) @[Bitwise.scala 72:15]
        node hi = mux(_T_3, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
        node lo = bits(io.immIn, 24, 13) @[ImmediateGenerator.scala 30:54]
        node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
        io.immOut <= _T_4 @[ImmediateGenerator.scala 30:17]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_5 = eq(UInt<2>("h02"), io.immSel) @[Conditional.scala 37:30]
        when _T_5 : @[Conditional.scala 39:67]
          node _T_6 = bits(io.immIn, 24, 24) @[ImmediateGenerator.scala 33:40]
          node _T_7 = bits(_T_6, 0, 0) @[Bitwise.scala 72:15]
          node hi_hi = mux(_T_7, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
          node hi_lo = bits(io.immIn, 24, 18) @[ImmediateGenerator.scala 33:54]
          node lo_1 = bits(io.immIn, 4, 0) @[ImmediateGenerator.scala 33:71]
          node hi_1 = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
          node _T_8 = cat(hi_1, lo_1) @[Cat.scala 30:58]
          io.immOut <= _T_8 @[ImmediateGenerator.scala 33:17]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_9 = eq(UInt<2>("h03"), io.immSel) @[Conditional.scala 37:30]
          when _T_9 : @[Conditional.scala 39:67]
            node hi_2 = bits(io.immIn, 24, 5) @[ImmediateGenerator.scala 36:32]
            node lo_2 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
            node _T_10 = cat(hi_2, lo_2) @[Cat.scala 30:58]
            io.immOut <= _T_10 @[ImmediateGenerator.scala 36:17]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_11 = eq(UInt<3>("h04"), io.immSel) @[Conditional.scala 37:30]
            when _T_11 : @[Conditional.scala 39:67]
              node _T_12 = bits(io.immIn, 24, 24) @[ImmediateGenerator.scala 39:40]
              node _T_13 = bits(_T_12, 0, 0) @[Bitwise.scala 72:15]
              node hi_hi_hi = mux(_T_13, UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
              node hi_hi_lo = bits(io.immIn, 24, 24) @[ImmediateGenerator.scala 39:54]
              node hi_lo_1 = bits(io.immIn, 12, 5) @[ImmediateGenerator.scala 39:68]
              node lo_hi_hi = bits(io.immIn, 13, 13) @[ImmediateGenerator.scala 39:84]
              node lo_hi_lo = bits(io.immIn, 23, 14) @[ImmediateGenerator.scala 39:98]
              node lo_hi = cat(lo_hi_hi, lo_hi_lo) @[Cat.scala 30:58]
              node lo_3 = cat(lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
              node hi_hi_1 = cat(hi_hi_hi, hi_hi_lo) @[Cat.scala 30:58]
              node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
              node _T_14 = cat(hi_3, lo_3) @[Cat.scala 30:58]
              io.immOut <= _T_14 @[ImmediateGenerator.scala 39:17]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_15 = eq(UInt<3>("h05"), io.immSel) @[Conditional.scala 37:30]
              when _T_15 : @[Conditional.scala 39:67]
                node _T_16 = bits(io.immIn, 24, 24) @[ImmediateGenerator.scala 42:40]
                node _T_17 = bits(_T_16, 0, 0) @[Bitwise.scala 72:15]
                node hi_hi_2 = mux(_T_17, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
                node hi_lo_2 = bits(io.immIn, 24, 18) @[ImmediateGenerator.scala 42:54]
                node lo_hi_1 = bits(io.immIn, 4, 1) @[ImmediateGenerator.scala 42:71]
                node lo_4 = cat(lo_hi_1, UInt<1>("h00")) @[Cat.scala 30:58]
                node hi_4 = cat(hi_hi_2, hi_lo_2) @[Cat.scala 30:58]
                node _T_18 = cat(hi_4, lo_4) @[Cat.scala 30:58]
                io.immOut <= _T_18 @[ImmediateGenerator.scala 42:17]
                skip @[Conditional.scala 39:67]
    
  module DataMemory : 
    input clock : Clock
    input reset : Reset
    output io : {flip address : UInt<32>, flip dataIn : UInt<32>, flip memRW : UInt<1>, flip memUn : UInt<1>, flip memWidth : UInt<2>, dataOut : UInt<32>}
    
    cmem dataMem : UInt<8>[2097152] @[DataMemory.scala 19:20]
    wire _WIRE : UInt
    _WIRE <= UInt<1>("h00")
    io.dataOut <= _WIRE @[DataMemory.scala 21:14]
    when io.memRW : @[DataMemory.scala 24:17]
      node _T = eq(UInt<1>("h00"), io.memWidth) @[Conditional.scala 37:30]
      when _T : @[Conditional.scala 40:58]
        node _T_1 = bits(io.dataIn, 7, 0) @[DataMemory.scala 27:44]
        node _T_2 = bits(io.address, 20, 0)
        write mport MPORT = dataMem[_T_2], clock
        MPORT <= _T_1
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_3 = eq(UInt<1>("h01"), io.memWidth) @[Conditional.scala 37:30]
        when _T_3 : @[Conditional.scala 39:67]
          node _T_4 = bits(io.dataIn, 7, 0) @[DataMemory.scala 30:44]
          node _T_5 = bits(io.address, 20, 0)
          write mport MPORT_1 = dataMem[_T_5], clock
          MPORT_1 <= _T_4
          node _T_6 = add(io.address, UInt<1>("h01")) @[DataMemory.scala 31:34]
          node _T_7 = tail(_T_6, 1) @[DataMemory.scala 31:34]
          node _T_8 = bits(io.dataIn, 15, 8) @[DataMemory.scala 31:50]
          node _T_9 = bits(_T_7, 20, 0)
          write mport MPORT_2 = dataMem[_T_9], clock
          MPORT_2 <= _T_8
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_10 = eq(UInt<2>("h02"), io.memWidth) @[Conditional.scala 37:30]
          when _T_10 : @[Conditional.scala 39:67]
            node _T_11 = bits(io.dataIn, 7, 0) @[DataMemory.scala 34:44]
            node _T_12 = bits(io.address, 20, 0)
            write mport MPORT_3 = dataMem[_T_12], clock
            MPORT_3 <= _T_11
            node _T_13 = add(io.address, UInt<1>("h01")) @[DataMemory.scala 35:34]
            node _T_14 = tail(_T_13, 1) @[DataMemory.scala 35:34]
            node _T_15 = bits(io.dataIn, 15, 8) @[DataMemory.scala 35:50]
            node _T_16 = bits(_T_14, 20, 0)
            write mport MPORT_4 = dataMem[_T_16], clock
            MPORT_4 <= _T_15
            node _T_17 = add(io.address, UInt<2>("h02")) @[DataMemory.scala 36:34]
            node _T_18 = tail(_T_17, 1) @[DataMemory.scala 36:34]
            node _T_19 = bits(io.dataIn, 23, 16) @[DataMemory.scala 36:50]
            node _T_20 = bits(_T_18, 20, 0)
            write mport MPORT_5 = dataMem[_T_20], clock
            MPORT_5 <= _T_19
            node _T_21 = add(io.address, UInt<2>("h03")) @[DataMemory.scala 37:34]
            node _T_22 = tail(_T_21, 1) @[DataMemory.scala 37:34]
            node _T_23 = bits(io.dataIn, 31, 24) @[DataMemory.scala 37:50]
            node _T_24 = bits(_T_22, 20, 0)
            write mport MPORT_6 = dataMem[_T_24], clock
            MPORT_6 <= _T_23
            skip @[Conditional.scala 39:67]
      skip @[DataMemory.scala 24:17]
    node _T_25 = eq(UInt<1>("h00"), io.memWidth) @[Conditional.scala 37:30]
    when _T_25 : @[Conditional.scala 40:58]
      when io.memUn : @[DataMemory.scala 45:21]
        node _T_26 = bits(io.address, 20, 0) @[DataMemory.scala 46:35]
        read mport MPORT_7 = dataMem[_T_26], clock @[DataMemory.scala 46:35]
        io.dataOut <= MPORT_7 @[DataMemory.scala 46:20]
        skip @[DataMemory.scala 45:21]
      else : @[DataMemory.scala 47:19]
        node _T_27 = bits(io.address, 20, 0) @[DataMemory.scala 48:47]
        read mport MPORT_8 = dataMem[_T_27], clock @[DataMemory.scala 48:47]
        node _T_28 = bits(MPORT_8, 7, 7) @[DataMemory.scala 48:59]
        node _T_29 = bits(_T_28, 0, 0) @[Bitwise.scala 72:15]
        node hi = mux(_T_29, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
        node _T_30 = bits(io.address, 20, 0) @[DataMemory.scala 48:76]
        read mport lo = dataMem[_T_30], clock @[DataMemory.scala 48:76]
        node _T_31 = cat(hi, lo) @[Cat.scala 30:58]
        io.dataOut <= _T_31 @[DataMemory.scala 48:20]
        skip @[DataMemory.scala 47:19]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_32 = eq(UInt<1>("h01"), io.memWidth) @[Conditional.scala 37:30]
      when _T_32 : @[Conditional.scala 39:67]
        when io.memUn : @[DataMemory.scala 52:21]
          node _T_33 = add(io.address, UInt<1>("h01")) @[DataMemory.scala 53:51]
          node _T_34 = tail(_T_33, 1) @[DataMemory.scala 53:51]
          node _T_35 = bits(_T_34, 20, 0) @[DataMemory.scala 53:39]
          read mport hi_1 = dataMem[_T_35], clock @[DataMemory.scala 53:39]
          node _T_36 = bits(io.address, 20, 0) @[DataMemory.scala 53:71]
          read mport lo_1 = dataMem[_T_36], clock @[DataMemory.scala 53:71]
          node _T_37 = cat(hi_1, lo_1) @[Cat.scala 30:58]
          io.dataOut <= _T_37 @[DataMemory.scala 53:20]
          skip @[DataMemory.scala 52:21]
        else : @[DataMemory.scala 54:19]
          node _T_38 = add(io.address, UInt<1>("h01")) @[DataMemory.scala 55:59]
          node _T_39 = tail(_T_38, 1) @[DataMemory.scala 55:59]
          node _T_40 = bits(_T_39, 20, 0) @[DataMemory.scala 55:47]
          read mport MPORT_9 = dataMem[_T_40], clock @[DataMemory.scala 55:47]
          node _T_41 = bits(MPORT_9, 7, 7) @[DataMemory.scala 55:65]
          node _T_42 = bits(_T_41, 0, 0) @[Bitwise.scala 72:15]
          node hi_2 = mux(_T_42, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
          node _T_43 = add(io.address, UInt<1>("h01")) @[DataMemory.scala 55:98]
          node _T_44 = tail(_T_43, 1) @[DataMemory.scala 55:98]
          node _T_45 = bits(_T_44, 20, 0) @[DataMemory.scala 55:86]
          read mport hi_3 = dataMem[_T_45], clock @[DataMemory.scala 55:86]
          node _T_46 = bits(io.address, 20, 0) @[DataMemory.scala 55:118]
          read mport lo_2 = dataMem[_T_46], clock @[DataMemory.scala 55:118]
          node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
          node _T_47 = cat(hi_2, lo_3) @[Cat.scala 30:58]
          io.dataOut <= _T_47 @[DataMemory.scala 55:20]
          skip @[DataMemory.scala 54:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_48 = eq(UInt<2>("h02"), io.memWidth) @[Conditional.scala 37:30]
        when _T_48 : @[Conditional.scala 39:67]
          node _T_49 = add(io.address, UInt<2>("h03")) @[DataMemory.scala 59:49]
          node _T_50 = tail(_T_49, 1) @[DataMemory.scala 59:49]
          node _T_51 = bits(_T_50, 20, 0) @[DataMemory.scala 59:37]
          read mport hi_hi = dataMem[_T_51], clock @[DataMemory.scala 59:37]
          node _T_52 = add(io.address, UInt<2>("h02")) @[DataMemory.scala 59:80]
          node _T_53 = tail(_T_52, 1) @[DataMemory.scala 59:80]
          node _T_54 = bits(_T_53, 20, 0) @[DataMemory.scala 59:68]
          read mport hi_lo = dataMem[_T_54], clock @[DataMemory.scala 59:68]
          node _T_55 = add(io.address, UInt<1>("h01")) @[DataMemory.scala 59:111]
          node _T_56 = tail(_T_55, 1) @[DataMemory.scala 59:111]
          node _T_57 = bits(_T_56, 20, 0) @[DataMemory.scala 59:99]
          read mport lo_hi = dataMem[_T_57], clock @[DataMemory.scala 59:99]
          node _T_58 = bits(io.address, 20, 0) @[DataMemory.scala 59:130]
          read mport lo_lo = dataMem[_T_58], clock @[DataMemory.scala 59:130]
          node lo_4 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
          node hi_4 = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
          node _T_59 = cat(hi_4, lo_4) @[Cat.scala 30:58]
          io.dataOut <= _T_59 @[DataMemory.scala 59:18]
          skip @[Conditional.scala 39:67]
    
  module WriteBackSelector : 
    input clock : Clock
    input reset : Reset
    output io : {flip memIn : UInt<32>, flip aLUIn : UInt<32>, flip pCplus4 : UInt<32>, flip wBSel : UInt<2>, wBOut : UInt<32>}
    
    wire _WIRE : UInt
    _WIRE <= UInt<1>("h00")
    io.wBOut <= _WIRE @[WriteBackSelector.scala 20:12]
    node _T = eq(UInt<1>("h00"), io.wBSel) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      io.wBOut <= io.memIn @[WriteBackSelector.scala 25:16]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<1>("h01"), io.wBSel) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        io.wBOut <= io.aLUIn @[WriteBackSelector.scala 29:16]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<2>("h02"), io.wBSel) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          io.wBOut <= io.pCplus4 @[WriteBackSelector.scala 33:16]
          skip @[Conditional.scala 39:67]
    
  module BranchComparator : 
    input clock : Clock
    input reset : Reset
    output io : {flip dataA : UInt<32>, flip dataB : UInt<32>, flip brUn : UInt<1>, brEq : UInt<1>, brLT : UInt<1>}
    
    node _T = eq(io.dataA, io.dataB) @[BranchComparator.scala 10:23]
    io.brEq <= _T @[BranchComparator.scala 10:11]
    when io.brUn : @[BranchComparator.scala 12:16]
      node _T_1 = lt(io.dataA, io.dataB) @[BranchComparator.scala 13:25]
      io.brLT <= _T_1 @[BranchComparator.scala 13:13]
      skip @[BranchComparator.scala 12:16]
    else : @[BranchComparator.scala 14:15]
      node _T_2 = asSInt(io.dataA) @[BranchComparator.scala 15:31]
      node _T_3 = asSInt(io.dataB) @[BranchComparator.scala 15:51]
      node _T_4 = lt(_T_2, _T_3) @[BranchComparator.scala 15:34]
      io.brLT <= _T_4 @[BranchComparator.scala 15:13]
      skip @[BranchComparator.scala 14:15]
    
  module Processor : 
    input clock : Clock
    input reset : UInt<1>
    output io : {haltOut : UInt<1>}
    
    inst programCounter of ProgramCounter @[Processor.scala 12:30]
    programCounter.clock <= clock
    programCounter.reset <= reset
    inst instructionMemory of InstructionMemory @[Processor.scala 13:33]
    instructionMemory.clock <= clock
    instructionMemory.reset <= reset
    inst instructionDecoder of InstructionDecoder @[Processor.scala 14:34]
    instructionDecoder.clock <= clock
    instructionDecoder.reset <= reset
    inst registerBank of RegisterBank @[Processor.scala 15:28]
    registerBank.clock <= clock
    registerBank.reset <= reset
    inst controlLogic of ControlLogic @[Processor.scala 16:28]
    controlLogic.clock <= clock
    controlLogic.reset <= reset
    inst arithmeticLogicUnit of ALU @[Processor.scala 17:35]
    arithmeticLogicUnit.clock <= clock
    arithmeticLogicUnit.reset <= reset
    inst immediateGenerator of ImmediateGenerator @[Processor.scala 18:34]
    immediateGenerator.clock <= clock
    immediateGenerator.reset <= reset
    inst dataMemory of DataMemory @[Processor.scala 19:26]
    dataMemory.clock <= clock
    dataMemory.reset <= reset
    inst writeBackSelector of WriteBackSelector @[Processor.scala 20:33]
    writeBackSelector.clock <= clock
    writeBackSelector.reset <= reset
    inst branchComparator of BranchComparator @[Processor.scala 21:32]
    branchComparator.clock <= clock
    branchComparator.reset <= reset
    programCounter.io.pCSel <= controlLogic.io.pCSel @[Processor.scala 26:27]
    programCounter.io.aLUIn <= arithmeticLogicUnit.io.result @[Processor.scala 27:27]
    programCounter.io.haltPC <= controlLogic.io.haltPC @[Processor.scala 28:28]
    node _T = dshr(programCounter.io.pCOut, UInt<2>("h02")) @[Processor.scala 31:59]
    instructionMemory.io.address <= _T @[Processor.scala 31:32]
    instructionDecoder.io.inst <= instructionMemory.io.instOut @[Processor.scala 34:30]
    registerBank.io.rd <= instructionDecoder.io.rd @[Processor.scala 37:22]
    registerBank.io.rs1 <= instructionDecoder.io.rs1 @[Processor.scala 38:23]
    registerBank.io.rs2 <= instructionDecoder.io.rs2 @[Processor.scala 39:23]
    registerBank.io.dataIn <= writeBackSelector.io.wBOut @[Processor.scala 40:26]
    registerBank.io.regWrite <= controlLogic.io.regWEn @[Processor.scala 41:28]
    registerBank.io.call <= controlLogic.io.call @[Processor.scala 42:24]
    registerBank.io.eCall <= controlLogic.io.eCall @[Processor.scala 43:25]
    controlLogic.io.ctrl <= instructionDecoder.io.ctrl @[Processor.scala 46:24]
    controlLogic.io.brEq <= branchComparator.io.brEq @[Processor.scala 47:24]
    controlLogic.io.brLT <= branchComparator.io.brLT @[Processor.scala 48:24]
    controlLogic.io.a7 <= registerBank.io.a7 @[Processor.scala 49:22]
    arithmeticLogicUnit.io.dataA <= registerBank.io.dataA @[Processor.scala 52:32]
    arithmeticLogicUnit.io.dataB <= registerBank.io.dataB @[Processor.scala 53:32]
    arithmeticLogicUnit.io.aSel <= controlLogic.io.aSel @[Processor.scala 54:31]
    arithmeticLogicUnit.io.bSel <= controlLogic.io.bSel @[Processor.scala 55:31]
    arithmeticLogicUnit.io.aLUSel <= controlLogic.io.aLUSel @[Processor.scala 56:33]
    arithmeticLogicUnit.io.pCIn <= programCounter.io.pCOut @[Processor.scala 57:31]
    arithmeticLogicUnit.io.immIn <= immediateGenerator.io.immOut @[Processor.scala 58:32]
    immediateGenerator.io.immIn <= instructionDecoder.io.imm @[Processor.scala 61:31]
    immediateGenerator.io.immSel <= controlLogic.io.immSel @[Processor.scala 62:32]
    dataMemory.io.dataIn <= registerBank.io.dataB @[Processor.scala 65:24]
    dataMemory.io.address <= arithmeticLogicUnit.io.result @[Processor.scala 66:25]
    dataMemory.io.memRW <= controlLogic.io.memRW @[Processor.scala 67:23]
    dataMemory.io.memUn <= controlLogic.io.memUn @[Processor.scala 68:23]
    dataMemory.io.memWidth <= controlLogic.io.memWidth @[Processor.scala 69:26]
    writeBackSelector.io.memIn <= dataMemory.io.dataOut @[Processor.scala 72:30]
    writeBackSelector.io.aLUIn <= arithmeticLogicUnit.io.result @[Processor.scala 73:30]
    writeBackSelector.io.pCplus4 <= programCounter.io.pCPlus4 @[Processor.scala 74:32]
    writeBackSelector.io.wBSel <= controlLogic.io.wBSel @[Processor.scala 75:30]
    branchComparator.io.dataA <= registerBank.io.dataA @[Processor.scala 78:29]
    branchComparator.io.dataB <= registerBank.io.dataB @[Processor.scala 79:29]
    branchComparator.io.brUn <= controlLogic.io.brUn @[Processor.scala 80:28]
    io.haltOut <= controlLogic.io.haltPC @[Processor.scala 86:14]
    
